const sharp = require('sharp');
const path = require('path');

async function createVersionsWithFrame() {
  try {
    console.log('üîÑ –°–æ–∑–¥–∞–µ–º –≤–µ—Ä—Å–∏–∏ —Å —Ä–∞–º–∫–æ–π 150px...');
    
    const inputPath = path.join(__dirname, 'public', 'tap_head.jpg');
    
    // –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const metadata = await sharp(inputPath).metadata();
    console.log('üìè –ò—Å—Ö–æ–¥–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã:', metadata.width, 'x', metadata.height);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–∑–º–µ—Ä –¥–ª—è –∫–≤–∞–¥—Ä–∞—Ç–∞
    const squareSize = Math.min(metadata.width, metadata.height);
    const left = Math.floor((metadata.width - squareSize) / 2);
    const top = Math.floor((metadata.height - squareSize) / 2);
    
    console.log('‚úÇÔ∏è –û–±—Ä–µ–∑–∞–µ–º –¥–æ –∫–≤–∞–¥—Ä–∞—Ç–∞:', squareSize, 'x', squareSize);
    
    // –°–æ–∑–¥–∞–µ–º –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const squareImageBuffer = await sharp(inputPath)
      .extract({ 
        left: left, 
        top: top, 
        width: squareSize, 
        height: squareSize 
      })
      .toBuffer();
    
    // –†–∞–∑–º–µ—Ä —Ä–∞–º–∫–∏
    const frameSize = 150;
    
    // 1. –õ–æ–≥–æ—Ç–∏–ø –¥–ª—è —Å–∞–π—Ç–∞ (–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Å —Ä–∞–º–∫–æ–π)
    const websiteSize = squareSize + (frameSize * 2);
    console.log('üñºÔ∏è –°–æ–∑–¥–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø –¥–ª—è —Å–∞–π—Ç–∞, —Ä–∞–∑–º–µ—Ä:', websiteSize);
    
    const websiteLogo = await sharp({
      create: {
        width: websiteSize,
        height: websiteSize,
        channels: 3,
        background: { r: 0, g: 0, b: 0 }
      }
    })
    .composite([
      {
        input: squareImageBuffer,
        left: frameSize,
        top: frameSize
      }
    ]);
    
    const websitePath = path.join(__dirname, 'public', 'tap_logo_website.jpg');
    await websiteLogo.jpeg({ quality: 95 }).toFile(websitePath);
    console.log('‚úÖ –õ–æ–≥–æ—Ç–∏–ø –¥–ª—è —Å–∞–π—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω');
    
    // 2. –ò–∫–æ–Ω–∫–∞ 200x200 (—Å–æ–∑–¥–∞–µ–º –∑–∞–Ω–æ–≤–æ —Å —Ä–∞–º–∫–æ–π)
    console.log('üîç –°–æ–∑–¥–∞–µ–º –∏–∫–æ–Ω–∫—É 200x200');
    
    const iconLogo = await sharp({
      create: {
        width: websiteSize,
        height: websiteSize,
        channels: 3,
        background: { r: 0, g: 0, b: 0 }
      }
    })
    .composite([
      {
        input: squareImageBuffer,
        left: frameSize,
        top: frameSize
      }
    ])
    .resize(200, 200, { 
      fit: 'contain',
      background: { r: 0, g: 0, b: 0 }
    });
    
    const iconPath = path.join(__dirname, 'public', 'tap_logo_icon.jpg');
    await iconLogo.jpeg({ quality: 95 }).toFile(iconPath);
    console.log('‚úÖ –ò–∫–æ–Ω–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞');
    
    // 3. –ú–∞–ª–µ–Ω—å–∫–∞—è –∏–∫–æ–Ω–∫–∞ 40x40 (—Å–æ–∑–¥–∞–µ–º –∑–∞–Ω–æ–≤–æ —Å —Ä–∞–º–∫–æ–π)
    console.log('üîç –°–æ–∑–¥–∞–µ–º –º–∞–ª–µ–Ω—å–∫—É—é –∏–∫–æ–Ω–∫—É 40x40');
    
    const smallIcon = await sharp({
      create: {
        width: websiteSize,
        height: websiteSize,
        channels: 3,
        background: { r: 0, g: 0, b: 0 }
      }
    })
    .composite([
      {
        input: squareImageBuffer,
        left: frameSize,
        top: frameSize
      }
    ])
    .resize(40, 40, { 
      fit: 'contain',
      background: { r: 0, g: 0, b: 0 }
    });
    
    const smallIconPath = path.join(__dirname, 'public', 'tap_logo_small.jpg');
    await smallIcon.jpeg({ quality: 95 }).toFile(smallIconPath);
    console.log('‚úÖ –ú–∞–ª–µ–Ω—å–∫–∞—è –∏–∫–æ–Ω–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞');
    
    console.log('üéØ –í—Å–µ –≤–µ—Ä—Å–∏–∏ —Å–æ–∑–¥–∞–Ω—ã —Å –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π —Ä–∞–º–∫–æ–π 150px!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–µ—Ä—Å–∏–π:', error);
  }
}

createVersionsWithFrame();